parameters:
- name: arch
  type: string
  default: 'win64_msvc2017_64'

steps:
- bash: |
    git clone https://github.com/Skycoder42/QtApng
    cd QtApng
    git checkout $(git tag | tail -1)
  displayName: Clone APNG plugin
  
- bash: |
    cd QtApng
    qmake "CONFIG += libpng_static"
    make
    sudo make install
  condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT' ))
  displayName: Build APNG plugin (Unix)

- script: |
    cd QtApng
    set "arch=${{ parameters.arch }}"
    call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars%arch:~3,2%.bat"
    qmake "CONFIG += libpng_static"
    nmake
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
  displayName: Build APNG plugin (Windows)

- bash: |
    git clone https://github.com/novomesk/qt-avif-image-plugin
    cd qt-avif-image-plugin
    git checkout $(git tag | tail -1)

    cd qt-avif-image-plugin
    ./build_libqavif_static.sh
    make
    sudo make install
  condition: and(succeeded(), ne( variables['Agent.OS'], 'Windows_NT' ))
  displayName: Build AVIF plugin (Unix)

- bash: |
    choco install wget
    mkdir -p qt-avif-image-plugin/build
    cd qt-avif-image-plugin/build
    curl -s https://api.github.com/repos/novomesk/qt-avif-image-plugin/releases/latest \
    | grep "browser_download_url.*dll" \
    | cut -d : -f 2,3 \
    | tr -d \" \
    | wget -qi -
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
  displayName: Download AVIF plugin (Windows)

  # Skip HEIF on mac because Qt supports HEIF on mac for some reason
- bash: |
    git clone https://github.com/strukturag/libde265
    cd libde265
    git checkout $(git tag | tail -1)

    git clone https://github.com/strukturag/libheif
    cd libheif
    git checkout $(git tag | tail -1)

    git clone https://github.com/jurplel/qt-heif-image-plugin.git
    cd qt-heif-image-plugin
    git checkout $(git tag | tail -1)
  condition: ne( variables['Agent.OS'], 'Darwin' )
  displayName: Clone HEIF plugin
- bash: |
    cd libde265
    ./autogen.sh
    ./configure --disable-sherlock265
    make
    sudo make install

    cd libheif
    ./autogen.sh
    ./configure
    make
    sudo make install
    
    cd qt-heif-image-plugin
    cmake .
    make
    sudo make install
  condition: and(succeeded(), eq( variables['Agent.OS'], 'Linux' ))
  displayName: Build HEIF plugin (Linux)

  # - script: |
  #   set "arch=${{ parameters.arch }}"
  #   call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars%arch:~3,2%.bat"
  #   cd libde265
  #   call .\build.bat
  #   cd libheif
  #   cmake -DLIBDE265_LIBRARY="..\bin_%arch:~3,2%\lib\libde265.lib" -DLIBDE265_INCLUDE_DIR="..\bin_%arch:~3,2%\lib\" .
  #   nmake
    
  #   cd qt-heif-image-plugin
  #   cmake .
  #   nmake
  # condition: and(succeeded(), eq( variables['Agent.OS'], 'Windows_NT' ))
  # displayName: Build HEIF plugin (Windows)


  # gtk2 and qt5ct style plugins for linux appimages
- bash: |
    git clone https://code.qt.io/qt/qtstyleplugins.git
    cd qtstyleplugins
    qmake
    sudo make install

    wget 'https://sourceforge.net/projects/qt5ct/files/latest/download'
    tar xf download
    cd qt5ct*
    qmake
    sudo make install
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Get extra styles (Linux)
