
variables:
  nightlyDefines: 'DEFINES+=NIGHTLY=$(Build.BuildNumber)'
  nightlyString: '-nightly'

name: '$(Date:yyyy-MM-dd).$(Rev:r)'
jobs:
- job: Build

  strategy:
    matrix:
      linux:
        imageName: 'ubuntu-16.04'
      macos:
        imageName: 'macOS-10.15'
      win64:
        imageName: 'windows-2019'
        qtArch: 'win64_msvc2017_64'
      win32:
        imageName: 'windows-2019'
        qtArch: 'win32_msvc2017'
      qt59:
        imageName: 'ubuntu-18.04'
        dontPublish: 'true'
        skipDeploy: 'true'

  pool:
    vmImage: $(imageName)

  steps:
  - bash: echo '##vso[task.setvariable variable=MatrixName]'$(echo $(Agent.JobName) | cut -d' ' -f2)
    condition: and(succeeded(), ne(variables['dontPublish'], 'true'))
    displayName: 'Set matrix name'

  - checkout: self

  - template: ci/install-qt.yml
    parameters:
      arch: $(qtArch)

  - template: ci/build.yml
    parameters:
      defines: $(nightlyDefines)
      arch: $(qtArch)
    
  - template: ci/formatplugins.yml

  - template: ci/deploy.yml
    parameters:
      skipDeploy: $(skipDeploy)
      extraPlugins: 'imageformats/libqapng.so,imageformats/libqheif.so,imageformats/kimg_eps.so,imageformats/kimg_exr.so,imageformats/kimg_hdr.so,imageformats/kimg_kra.so,imageformats/kimg_ora.so,imageformats/kimg_pcx.so,imageformats/kimg_pic.so,imageformats/kimg_psd.so,imageformats/kimg_ras.so,imageformats/kimg_rgb.so,imageformats/kimg_tga.so,imageformats/kimg_xcf.so'


  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: 'bin'
      artifactName: 'qView$(nightlyString)-$(MatrixName).$(Build.BuildNumber)'
    condition: and(succeeded(), ne(variables['dontPublish'], 'true'))
    displayName: 'Publish build artifact'

